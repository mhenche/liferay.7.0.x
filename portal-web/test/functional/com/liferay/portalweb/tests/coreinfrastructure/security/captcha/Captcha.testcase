<definition component-name="portal-security">
	<property name="captcha.max.challenges" value="0" />
	<property name="portal.upstream" value="true" />
	<property name="test.assert.warning.exceptions" value="true" />
	<property name="testray.main.component.name" value="Security" />

	<set-up>
		<execute macro="TestCase#setUpPortalInstance" />
	</set-up>

	<tear-down>
		<var method="TestPropsUtil#get('test.portal.instance')" name="testPortalInstance" />

		<if>
			<equals arg1="${testPortalInstance}" arg2="true" />
			<then>
				<execute macro="PortalInstances#tearDownCP" />
			</then>
			<else>
				<execute macro="User#firstLoginPG" />

				<execute macro="Page#tearDownPG" />
			</else>
		</if>
	</tear-down>

	<command name="ViewCaptchaEnabled" priority="4">
		<execute macro="SignInNavigator#gotoCreateAccount" />

		<execute macro="User#viewCaptchaPG">
			<var name="captchaType" value="captcha" />
		</execute>
	</command>

	<command ignore="true" name="ViewRecaptchaEnabled" priority="4">
		<property name="test.name.skip.portal.instance" value="Captcha#ViewRecaptchaEnabled" />

		<var method="TestPropsUtil#get('recaptcha.private.key')" name="recaptchaPrivateKey" />
		<var method="TestPropsUtil#get('recaptcha.public.key')" name="recaptchaPublicKey" />

		<execute macro="User#firstLoginPG" />

		<execute macro="ProductMenu#gotoPortlet">
			<var name="category" value="Configuration" />
			<var name="panel" value="Control Panel" />
			<var name="portlet" value="Server Administration" />
		</execute>

		<execute function="AssertClick" locator1="NavBar#CAPTCHA" value1="CAPTCHA" />

		<execute macro="ServerAdministration#enableRecaptcha">
			<var name="privateKey" value="${recaptchaPrivateKey}" />
			<var name="publicKey" value="${recaptchaPublicKey}" />
		</execute>

		<execute macro="User#logoutPG" />

		<execute macro="SignInNavigator#gotoCreateAccount" />

		<execute macro="User#viewCaptchaPG">
			<var name="captchaType" value="recaptcha" />
		</execute>
	</command>
</definition>